passos que fiz até agr:
-instalar terraform
-instalar azure cli
-verificar a versão de ambos pela linha de comando
-logar no azure pela linha de comando "az login"
-criar  resource group:
C:\Users\User\terraform\bin>az group create --location westus --resource-group iac_grupo_braz
{
  "id": "/subscriptions/c8d026f0-226e-42a8-b9ce-517839250ec2/resourceGroups/iac_grupo_braz",
  "location": "westus",
  "managedBy": null,
  "name": "iac_grupo_braz",
  "properties": {
    "provisioningState": "Succeeded"
  },
  "tags": null,
  "type": "Microsoft.Resources/resourceGroups"
}
-criar uma pasta e abrir o vscode:
C:\Users\User\iac_braz>code
-instalar a extensão do terraform
-criar o arquivo main.tf
terraform {
    required_version = ">= 0.13"
    
    required_providers {
        azurerm = {
            source = "hashicorp/azurerm"
            version = ">= 2.26"
        }
        
    }

}

provider "azurerm" {
    skip_provider_registration = true
    features{
    }
}

resource "azurerm_resource_group" "aulainfracloudbraz" {
  name     = "infracloudterraformbraz"
  location = "West Europe"
}
-comando: terraform init
C:\Users\User\terraform\bin>terraform init

Initializing the backend...

Initializing provider plugins...
- Finding hashicorp/azurerm versions matching ">= 2.26.0"...
- Installing hashicorp/azurerm v3.0.2...
- Installed hashicorp/azurerm v3.0.2 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

-comando: terraform plan
C:\Users\User\terraform\bin>terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.aulainfracloudbraz will be created
  + resource "azurerm_resource_group" "aulainfracloudbraz" {
      + id       = (known after apply)
      + location = "westeurope"
      + name     = "infracloudterraformbraz"
    }

Plan: 1 to add, 0 to change, 0 to destroy.
-comando: terraform apply
C:\Users\User\terraform\bin>terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.aulainfracloudbraz will be created
  + resource "azurerm_resource_group" "aulainfracloudbraz" {
      + id       = (known after apply)
      + location = "westeurope"
      + name     = "infracloudterraformbraz"
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

azurerm_resource_group.aulainfracloudbraz: Creating...
azurerm_resource_group.aulainfracloudbraz: Creation complete after 4s [id=/subscriptions/c8d026f0-226e-42a8-b9ce-517839250ec2/resourceGroups/infracloudterraformbraz]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.